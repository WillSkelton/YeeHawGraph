{"version":3,"sources":["Styles/Colors.js","Components/Editor/Editor.jsx","Modules/StringIncrementor.js","Components/Graph/NodeTypes/index.js","Components/Graph/NodeTypes/Circle.jsx","Components/Graph/Graph.jsx","Modules/GenerateNodes.js","App.jsx","index.jsx"],"names":["Colors","Editor","props","vertexSet","setVertexSet","styles","table","tableRow","margin","boxSizing","cursor","tableCell","padding","tableHeader","headerRow","borderBottom","headerCell","minWidth","backgroundColor","color","addButton","vertexColumn","borderTop","borderRight","width","matrixCell","border","maxWidth","vertices","Object","keys","handleCellClick","event","row","column","preventDefault","handleVertexDelete","deleteVertex","idx","findIndex","vertex","forEach","splice","copy","TableContainer","component","Paper","style","Table","size","TableHead","TableRow","TableCell","align","Tooltip","placement","title","IconButton","disabled","length","onClick","nextVertexName","str","lastIndex","split","join","lastChar","newChar","String","fromCharCode","charCodeAt","StringIncrement","map","push","AddSharp","onContextMenu","TableBody","item","NodeTypes","circle","data","config","label","diameter","selfLoop","NodeStyles","display","flexDirection","justifyContent","alignItems","Handle","opacity","height","borderRadius","borderStyle","borderColor","borderWidth","id","isConnectable","type","position","top","left","Graph","elements","useState","undefined","flowInstance","setFlowInstance","useEffect","fitView","nodeTypes","onElementsRemove","onConnect","onLoad","reactFlowInstance","snapToGrid","snapGrid","nodeStrokeColor","n","background","nodeColor","nodeBorderRadius","gap","generatePositions","nodes","theta","node","index","radians","Math","PI","cos","sin","getCoords","x","y","GenerateNodes","edges","vertexName","rowNumber","matrixElement","columnNumber","adjacentVertexName","edge","source","target","sourceHandle","targetHandle","animated","document","getElementById","App","state","menuOpen","setMenuOpen","classes","makeStyles","Menu","menuButton","SidePanel","Legend","GraphContainer","selectedTab","setSelectedTab","A","B","C","D","setElements","handleMenuItemClick","itemNumber","className","MenuSharp","GridOnSharp","LayersSharp","SettingsSharp","newValue","Typography","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.eb2bd089.chunk.js","sourcesContent":["export const Colors = {\r\n\t// backgroundGray: '#353a42',\r\n\tbackgroundGray: '#222222',\r\n\tslate: '#2356a8',\r\n\tdarkPurple: '#a823a6',\r\n\tmaroon: '#a82340',\r\n\tseaFoam: '#23a871',\r\n\torange: '#a85a23',\r\n\tcyan: '#23a4a8',\r\n\tblack: '#000000',\r\n\twhite: '#dfdfdf',\r\n\tlightGrey: '#bcbcbc',\r\n\tblue: '#2f77eb',\r\n\tpurple: '#c92feb',\r\n\tgreen: '#2feb51',\r\n\tyellow: '#e8eb2f',\r\n\t// red: '#a30d0d',\r\n\tred: '#DC143C',\r\n\tsusie: '#eb2f8a',\r\n};\r\n","import React from 'react';\r\n\r\nimport {\r\n\tTable,\r\n\tTableBody,\r\n\tTableCell,\r\n\tTableContainer,\r\n\tTableHead,\r\n\tTableRow,\r\n\tPaper,\r\n\tIconButton,\r\n\tTooltip,\r\n} from '@mui/material';\r\n\r\nimport { AddSharp } from '@mui/icons-material';\r\nimport { StringIncrement } from '../../Modules/StringIncrementor';\r\nimport { Colors } from '../../Styles/Colors';\r\n\r\n// const red = '#DC143C';\r\n// const green = '#3CB371';\r\n\r\nconst Styles = () => ({\r\n\ttable: {\r\n\t\t// overflowX: 'scroll',\r\n\t\t// overflowY: 'scroll',\r\n\t},\r\n\ttableRow: {\r\n\t\tmargin: '0px',\r\n\t\tboxSizing: 'border-box',\r\n\t\tcursor: 'pointer',\r\n\t},\r\n\ttableCell: {\r\n\t\tpadding: '0px',\r\n\t\tcursor: 'pointer',\r\n\t},\r\n\ttableHeader: {\r\n\t\tpadding: '0px',\r\n\t},\r\n\theaderRow: {\r\n\t\tborderBottom: `2px solid ${Colors.blue}`,\r\n\t\tboxSizing: 'border-box',\r\n\t},\r\n\theaderCell: {\r\n\t\tpadding: '0px',\r\n\t\tminWidth: '16px',\r\n\t\tbackgroundColor: Colors.backgroundGray,\r\n\t\tcolor: Colors.white,\r\n\t},\r\n\r\n\taddButton: {\r\n\t\tpadding: '0px',\r\n\t\tcolor: Colors.white,\r\n\t},\r\n\tvertexColumn: {\r\n\t\tcolor: Colors.white,\r\n\t\tbackgroundColor: Colors.backgroundGray,\r\n\t\tborderTop: '0px',\r\n\t\tborderBottom: '0px',\r\n\r\n\t\tborderRight: `2px solid ${Colors.blue}`,\r\n\t\tboxSizing: 'border-box',\r\n\t\twidth: '16px',\r\n\t},\r\n\tmatrixCell: {\r\n\t\tborder: '0px',\r\n\t\t// height: '16px',\r\n\t\tmaxWidth: '16px',\r\n\t},\r\n});\r\n\r\nexport function Editor(props) {\r\n\tconst { vertexSet, setVertexSet } = props;\r\n\r\n\tconst styles = Styles();\r\n\r\n\tconst vertices = Object.keys(vertexSet);\r\n\r\n\tconst handleCellClick = (event, row, column) => {\r\n\t\tevent.preventDefault();\r\n\t\tvertexSet[row][column] = vertexSet[row][column] ? 0 : 1;\r\n\t\tsetVertexSet({ ...vertexSet });\r\n\t};\r\n\r\n\tconst handleVertexAdd = () => {\r\n\t\tconst nextVertexName = StringIncrement(vertices[vertices.length - 1]);\r\n\r\n\t\tconst copy = { ...vertexSet };\r\n\t\tcopy[nextVertexName] = vertices.map(() => 0);\r\n\r\n\t\tfor (const vertex of Object.keys(copy)) {\r\n\t\t\tcopy[vertex].push(0);\r\n\t\t}\r\n\r\n\t\tsetVertexSet(copy);\r\n\t};\r\n\r\n\tconst handleVertexDelete = (event, deleteVertex) => {\r\n\t\tconst idx = vertices.findIndex(vertex => vertex === deleteVertex);\r\n\r\n\t\tvertices.forEach(vertex => {\r\n\t\t\tvertexSet[vertex].splice(idx, 1);\r\n\t\t});\r\n\r\n\t\tevent.preventDefault();\r\n\t\tconst copy = { ...vertexSet };\r\n\t\tdelete copy[deleteVertex];\r\n\r\n\t\tsetVertexSet(copy);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<TableContainer component={Paper} style={styles.table}>\r\n\t\t\t<Table size=\"small\">\r\n\t\t\t\t<TableHead style={styles.tableHeader}>\r\n\t\t\t\t\t<TableRow style={{\r\n\t\t\t\t\t\t...styles.headerRow,\r\n\t\t\t\t\t\t...styles.tableRow,\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t...styles.tableCell,\r\n\t\t\t\t\t\t\t\t...styles.vertexColumn,\r\n\t\t\t\t\t\t\t\t...styles.headerCell,\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Tooltip placement=\"right\" title=\"Click to Add Vertex\">\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tdisabled={vertices.length >= 26}\r\n\t\t\t\t\t\t\t\t\tstyle={styles.addButton}\r\n\t\t\t\t\t\t\t\t\tonClick={handleVertexAdd}>\r\n\t\t\t\t\t\t\t\t\t<AddSharp />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvertices.map(vertex => (\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"Right-Click to Delete\" placement=\"bottom\">\r\n\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\tonContextMenu={event => handleVertexDelete(event, vertex)}\r\n\t\t\t\t\t\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t...styles.headerCell,\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t{vertex}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</TableRow>\r\n\t\t\t\t</TableHead>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvertices.map(vertex => (\r\n\t\t\t\t\t\t\t<TableRow style={{\r\n\t\t\t\t\t\t\t\t...styles.tableRow,\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Tooltip title=\"Right-Click to Delete\" placement=\"right\">\r\n\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\tonContextMenu={event => handleVertexDelete(event, vertex)}\r\n\t\t\t\t\t\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t...styles.tableCell,\r\n\t\t\t\t\t\t\t\t\t\t\t...styles.vertexColumn,\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t{vertex}\r\n\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tvertexSet[vertex].map((item, column) => (\r\n\t\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={event => handleCellClick(event, vertex, column)}\r\n\t\t\t\t\t\t\t\t\t\t\tonContextMenu={event => handleCellClick(event, vertex, column)}\r\n\t\t\t\t\t\t\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t...styles.tableCell,\r\n\t\t\t\t\t\t\t\t\t\t\t\t...styles.matrixCell,\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: item ? Colors.seaFoam : Colors.red,\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: item ? 'black' : 'white',\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t</TableBody>\r\n\t\t\t</Table>\r\n\t\t</TableContainer>\r\n\t);\r\n}\r\n","export function StringIncrement(str) {\r\n\tconst lastIndex = str.length - 1;\r\n\r\n\tif (lastIndex < 0) {\r\n\t\treturn 'A';\r\n\t}\r\n\r\n\tif (str[lastIndex] === 'Z') {\r\n\t\tconst copy = str.split('');\r\n\r\n\t\tconst newChar = 'A';\r\n\r\n\t\tcopy[lastIndex] = newChar;\r\n\t\treturn `A${copy.join('')}`;\r\n\t}\r\n\r\n\tconst copy = str.split('');\r\n\r\n\tconst lastChar = str[lastIndex];\r\n\tconst newChar = String.fromCharCode(lastChar.charCodeAt(0) + 1);\r\n\r\n\tcopy[lastIndex] = newChar;\r\n\treturn copy.join('');\r\n}\r\n","import { Circle } from './Circle';\r\n\r\nexport const NodeTypes = {\r\n\tcircle: Circle,\r\n};\r\n","import React from 'react';\r\nimport { Handle } from 'react-flow-renderer';\r\nimport { Colors } from '../../../Styles/Colors';\r\n\r\nconst Styles = () => ({\r\n\tNodeStyles: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t\tpadding: 0,\r\n\t\tboxSizing: 'border-box',\r\n\r\n\t},\r\n\tHandle: {\r\n\t\topacity: '0%',\r\n\t},\r\n});\r\n\r\nexport function Circle(data) {\r\n\tconst config = data.data;\r\n\tconst { label, diameter, backgroundColor, color, selfLoop } = config;\r\n\r\n\tconst styles = Styles();\r\n\treturn (\r\n\t\t<div style={{\r\n\t\t\t...styles.NodeStyles,\r\n\t\t\theight: diameter || '60px',\r\n\t\t\twidth: diameter || '60px',\r\n\t\t\tborderRadius: diameter || '60px',\r\n\t\t\tbackgroundColor: backgroundColor || Colors.slate,\r\n\t\t\tcolor: color || Colors.white,\r\n\t\t\tborderStyle: selfLoop ? 'double' : 'none',\r\n\t\t\tborderColor: color || Colors.white,\r\n\t\t\tborderWidth: selfLoop ? '4px' : '0px',\r\n\t\t}}>\r\n\t\t\t<Handle\r\n\t\t\t\tid=\"a\"\r\n\t\t\t\tisConnectable={false}\r\n\t\t\t\ttype=\"source\"\r\n\t\t\t\tposition=\"top\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t...styles.Handle,\r\n\t\t\t\t\ttop: '2%',\r\n\t\t\t\t\tleft: '25%',\r\n\t\t\t\t}} />\r\n\r\n\t\t\t<Handle\r\n\t\t\t\tid=\"b\"\r\n\t\t\t\tisConnectable={false}\r\n\t\t\t\ttype=\"target\"\r\n\t\t\t\tposition=\"top\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t...styles.Handle,\r\n\t\t\t\t\ttop: '2%',\r\n\t\t\t\t\tleft: '72%',\r\n\t\t\t\t}} />\r\n\t\t\t<Handle\r\n\t\t\t\tid=\"c\"\r\n\t\t\t\tisConnectable={false}\r\n\t\t\t\ttype=\"source\"\r\n\t\t\t\tposition=\"top\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t...styles.Handle,\r\n\t\t\t\t\ttop: '48%',\r\n\t\t\t\t}} />\r\n\t\t\t<div>{label}</div>\r\n\t\t\t<Handle\r\n\t\t\t\tid=\"d\"\r\n\t\t\t\tisConnectable={false}\r\n\t\t\t\ttype=\"target\"\r\n\t\t\t\tposition=\"bottom\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t...styles.Handle,\r\n\t\t\t\t\ttop: '48%',\r\n\t\t\t\t}} />\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport ReactFlow, {\r\n\t// removeElements,\r\n\t// addEdge,\r\n\tMiniMap,\r\n\tControls,\r\n\tBackground,\r\n\tReactFlowProvider,\r\n\tuseZoomPanHelper,\r\n} from 'react-flow-renderer';\r\nimport { Colors } from '../../Styles/Colors';\r\n\r\nimport { NodeTypes } from './NodeTypes';\r\n\r\nexport function Graph(props) {\r\n\tconst { elements } = props;\r\n\tconst onElementsRemove = () => { };\r\n\tconst onConnect = () => { };\r\n\r\n\tconst [flowInstance, setFlowInstance] = useState(undefined);\r\n\r\n\t// const { fitBounds } = useZoomPanHelper();\r\n\r\n\tconst onLoad = reactFlowInstance => {\r\n\t\treactFlowInstance.fitView();\r\n\t\tsetFlowInstance(reactFlowInstance);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t// eslint-disable-next-line no-unused-expressions\r\n\t\tflowInstance && flowInstance.fitView();\r\n\t}, [elements, flowInstance]);\r\n\r\n\treturn (\r\n\t\t<ReactFlowProvider>\r\n\t\t\t<ReactFlow\r\n\t\t\t\telements={elements}\r\n\t\t\t\tnodeTypes={NodeTypes}\r\n\t\t\t\tonElementsRemove={onElementsRemove}\r\n\t\t\t\tonConnect={onConnect}\r\n\t\t\t\tonLoad={onLoad}\r\n\t\t\t\tsnapToGrid\r\n\t\t\t\tsnapGrid={[15, 15]}>\r\n\t\t\t\t<MiniMap\r\n\t\t\t\t\tstyle={{ backgroundColor: 'black' }}\r\n\t\t\t\t\tnodeStrokeColor={n => {\r\n\t\t\t\t\t\tif (n.style?.background) {\r\n\t\t\t\t\t\t\treturn n.style.background;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (n.type === 'input') {\r\n\t\t\t\t\t\t\treturn '#0041d0';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (n.type === 'output') {\r\n\t\t\t\t\t\t\treturn '#ff0072';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (n.type === 'default') {\r\n\t\t\t\t\t\t\treturn '#1a192b';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (n.type === 'circle') {\r\n\t\t\t\t\t\t\treturn n.data.color || 'black';\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn '#eee';\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tnodeColor={n => {\r\n\t\t\t\t\t\tif (n.style?.background) {\r\n\t\t\t\t\t\t\treturn n.style.background;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (n.type === 'circle') {\r\n\t\t\t\t\t\t\treturn n.data.color || Colors.slate;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn '#fff';\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tnodeBorderRadius={2} />\r\n\t\t\t\t<Controls />\r\n\t\t\t\t<Background color=\"#aaa\" gap={16} />\r\n\t\t\t</ReactFlow>\r\n\t\t</ReactFlowProvider>\r\n\t);\r\n}\r\n","const r = 200;\r\n\r\nexport const customElements = [\r\n\t{\r\n\t\tid: '1',\r\n\t\ttype: 'circle',\r\n\t\tposition: { x: 100, y: 100 },\r\n\t\tdata: {\r\n\t\t\tlabel: 'Yee',\r\n\t\t\tdiameter: '100px',\r\n\t\t\tselfLoop: true,\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tid: '2',\r\n\t\ttype: 'circle',\r\n\t\tposition: { x: 500, y: 500 },\r\n\t\tdata: {\r\n\t\t\tlabel: 'Haw',\r\n\t\t\tdiameter: '100px',\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tid: 'e1-2',\r\n\t\tsource: '1',\r\n\t\ttarget: '2',\r\n\t\tsourceHandle: 'c',\r\n\t\ttargetHandle: 'd',\r\n\t\ttype: 'straight',\r\n\t\tanimated: true,\r\n\t},\r\n\t{\r\n\t\tid: 'e1-2',\r\n\t\tsource: '2',\r\n\t\ttarget: '1',\r\n\t\tsourceHandle: 'c',\r\n\t\ttargetHandle: 'd',\r\n\t\ttype: 'straight',\r\n\t\tanimated: true,\r\n\t},\r\n];\r\n\r\nexport function getCoords(theta) {\r\n\tconst radians = (theta * Math.PI) / 180;\r\n\tconst x = r * (Math.cos(radians));\r\n\tconst y = r * (Math.sin(radians));\r\n\treturn [x, y];\r\n}\r\n\r\nexport function generatePositions(nodes) {\r\n\tconst numberOfNodes = nodes.length;\r\n\tconst theta = 360 / numberOfNodes;\r\n\r\n\tnodes.forEach((node, index) => {\r\n\t\tconst thetaSubI = theta * (index + 1);\r\n\t\tconst [x, y] = getCoords(thetaSubI);\r\n\r\n\t\t// eslint-disable-next-line no-param-reassign\r\n\t\tnode.position = { x, y };\r\n\t\t// console.log(`${node.id}: (${x}, ${y})`);\r\n\t});\r\n}\r\n\r\nexport function GenerateNodes(vertexSet) {\r\n\tconst vertices = Object.keys(vertexSet);\r\n\r\n\tconst nodes = [];\r\n\tconst edges = [];\r\n\r\n\tvertices.forEach((vertexName, rowNumber) => {\r\n\t\tconst node = {\r\n\t\t\tid: vertexName,\r\n\t\t\ttype: 'circle',\r\n\t\t\tposition: { x: 0, y: 0 },\r\n\t\t\tdata: {\r\n\t\t\t\tlabel: vertexName,\r\n\t\t\t\tselfLoop: false,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tnodes.push(node);\r\n\r\n\t\tvertexSet[vertexName].forEach((matrixElement, columnNumber) => {\r\n\t\t\tif (columnNumber === rowNumber && matrixElement === 1) {\r\n\t\t\t\tnode.data.selfLoop = columnNumber === rowNumber;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (matrixElement !== 1) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst adjacentVertexName = vertices[columnNumber];\r\n\r\n\t\t\tconst edge = {\r\n\t\t\t\tid: `e${vertexName}-${adjacentVertexName}`,\r\n\t\t\t\tsource: `${vertexName}`,\r\n\t\t\t\ttarget: `${adjacentVertexName}`,\r\n\t\t\t\tsourceHandle: 'c',\r\n\t\t\t\ttargetHandle: 'd',\r\n\t\t\t\ttype: 'straight',\r\n\t\t\t\tanimated: true,\r\n\t\t\t};\r\n\r\n\t\t\tedges.push(edge);\r\n\t\t});\r\n\t});\r\n\r\n\tgeneratePositions(nodes);\r\n\r\n\treturn [\r\n\t\t...nodes,\r\n\t\t...edges,\r\n\t];\r\n}\r\n","import { GridOnSharp, LayersSharp, MenuSharp, SettingsSharp } from '@mui/icons-material';\r\nimport { IconButton, Tooltip, Typography } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Editor } from './Components/Editor/Editor';\r\nimport { Graph } from './Components/Graph/Graph';\r\nimport { GenerateNodes } from './Modules/GenerateNodes';\r\nimport { Colors } from './Styles/Colors';\r\n\r\ndocument.getElementById('body').style.margin = '0px';\r\n\r\nconst useStyles = state => makeStyles({\r\n\tApp: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\twidth: '100vw',\r\n\t\theight: '100vh',\r\n\t},\r\n\tMenu: {\r\n\t\twidth: '40px',\r\n\t\tbackgroundColor: 'black',\r\n\t\tborder: `2px solid ${Colors.blue}`,\r\n\t\tboxSizing: 'border-box',\r\n\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tjustifyContent: 'flex-start',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tmenuButton: {\r\n\t\t'&:hover': {\r\n\t\t\tcolor: Colors.green,\r\n\t\t},\r\n\t\tcolor: Colors.blue,\r\n\t},\r\n\tSidePanel: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\twidth: state.menuOpen ? '30%' : '0%',\r\n\t\theight: '100%',\r\n\t\tbackgroundColor: 'black',\r\n\t},\r\n\tEditor: {\r\n\t\twidth: '100%',\r\n\t\theight: '100%',\r\n\t\tbackgroundColor: 'black',\r\n\t\tboxSizing: 'border-box',\r\n\r\n\t},\r\n\tLegend: {\r\n\t\twidth: '100%',\r\n\t\theight: '100%',\r\n\t\tbackgroundColor: 'black',\r\n\t\tboxSizing: 'border-box',\r\n\t\t// border: '2px solid white',\r\n\t},\r\n\tGraphContainer: {\r\n\t\twidth: state.menuOpen ? '70%' : '100%',\r\n\t\theight: '100%',\r\n\t\tbackgroundColor: '#222',\r\n\t},\r\n})();\r\n\r\nexport function App() {\r\n\tconst [menuOpen, setMenuOpen] = useState(false);\r\n\tconst classes = useStyles({ menuOpen });\r\n\r\n\tconst [selectedTab, setSelectedTab] = useState(0);\r\n\r\n\tconst [vertexSet, setVertexSet] = useState({\r\n\t\tA: [0, 1, 0, 0],\r\n\t\tB: [0, 0, 1, 0],\r\n\t\tC: [0, 0, 0, 1],\r\n\t\tD: [1, 0, 0, 0],\r\n\t});\r\n\r\n\tconst [elements, setElements] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetElements(GenerateNodes(vertexSet));\r\n\t}, []);\r\n\r\n\tconst updateVertexSet = newValue => {\r\n\t\tsetVertexSet(newValue);\r\n\t\tsetElements(GenerateNodes(newValue));\r\n\t};\r\n\r\n\tconst toggleMenu = () => {\r\n\t\tsetMenuOpen(!menuOpen);\r\n\t};\r\n\r\n\tconst handleMenuItemClick = itemNumber => {\r\n\t\tsetMenuOpen(!menuOpen || (itemNumber !== selectedTab));\r\n\t\tsetSelectedTab(itemNumber);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={classes.App}>\r\n\t\t\t<div className={classes.Menu}>\r\n\t\t\t\t<Tooltip title=\"Menu\" placement=\"right\">\r\n\t\t\t\t\t<IconButton onClick={toggleMenu}>\r\n\t\t\t\t\t\t<MenuSharp className={classes.menuButton} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t\t<Tooltip title=\"Editor\" placement=\"right\">\r\n\t\t\t\t\t<IconButton onClick={() => handleMenuItemClick(0)}>\r\n\t\t\t\t\t\t<GridOnSharp className={classes.menuButton} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t\t<Tooltip title=\"Legend\" placement=\"right\">\r\n\t\t\t\t\t<IconButton onClick={() => handleMenuItemClick(1)}>\r\n\t\t\t\t\t\t<LayersSharp className={classes.menuButton} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t\t<Tooltip title=\"Settings\" placement=\"right\">\r\n\t\t\t\t\t<IconButton onClick={() => handleMenuItemClick(2)}>\r\n\t\t\t\t\t\t<SettingsSharp className={classes.menuButton} />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tmenuOpen && (\r\n\t\t\t\t\t<div className={classes.SidePanel}>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tselectedTab === 0 && (\r\n\t\t\t\t\t\t\t\t<div className={classes.Editor}>\r\n\t\t\t\t\t\t\t\t\t<Editor\r\n\t\t\t\t\t\t\t\t\t\tvertexSet={vertexSet}\r\n\t\t\t\t\t\t\t\t\t\tsetVertexSet={updateVertexSet} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{selectedTab === 1 && (\r\n\t\t\t\t\t\t\t<div className={classes.Legend}>\r\n\t\t\t\t\t\t\t\t<Typography className={{ color: Colors.white }}>Legend</Typography>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{selectedTab === 2 && (\r\n\t\t\t\t\t\t\t<div className={classes.Legend}>\r\n\t\t\t\t\t\t\t\t<Typography className={{ color: Colors.white }}>Settings</Typography>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\t<div className={classes.GraphContainer}>\r\n\t\t\t\t<Graph elements={elements} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}