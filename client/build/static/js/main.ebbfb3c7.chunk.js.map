{"version":3,"sources":["Components/Editor/Editor.jsx","Modules/StringIncrementor.js","Components/Graph/NodeTypes/index.js","Components/Graph/NodeTypes/Circle.jsx","Components/Graph/Graph.jsx","Modules/GenerateNodes.js","App.jsx","index.jsx"],"names":["Editor","props","vertexSet","setVertexSet","styles","table","overflowX","overflowY","tableRow","margin","boxSizing","tableCell","padding","tableHeader","headerRow","borderBottom","headerCell","minWidth","addButton","vertexColumn","borderRight","width","matrixCell","border","maxWidth","vertices","Object","keys","TableContainer","component","Paper","style","Table","size","TableHead","TableRow","TableCell","align","Tooltip","placement","title","IconButton","disabled","length","onClick","nextVertexName","str","lastIndex","copy","split","join","lastChar","newChar","String","fromCharCode","charCodeAt","StringIncrement","map","push","AddSharp","vertex","TableBody","item","column","row","handleCellClick","backgroundColor","color","NodeTypes","circle","data","config","label","diameter","selfLoop","NodeStyles","display","flexDirection","justifyContent","alignItems","Handle","opacity","height","borderRadius","borderStyle","borderColor","borderWidth","id","isConnectable","type","position","top","left","onLoad","reactFlowInstance","fitView","Graph","elements","nodeTypes","onElementsRemove","onConnect","snapToGrid","snapGrid","nodeStrokeColor","n","background","nodeColor","nodeBorderRadius","gap","GenerateNodes","nodes","edges","forEach","vertexName","rowNumber","node","x","y","matrixElement","columnNumber","adjacentVertexName","edge","source","target","sourceHandle","targetHandle","animated","document","getElementById","App","SidePanel","Legend","GraphContainer","useState","A","B","C","D","setElements","useEffect","className","newValue","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ebbfb3c7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport {\r\n\tTable,\r\n\tTableBody,\r\n\tTableCell,\r\n\tTableContainer,\r\n\tTableHead,\r\n\tTableRow,\r\n\tPaper,\r\n\tIconButton,\r\n\tTooltip,\r\n} from '@mui/material';\r\n\r\nimport { AddSharp } from '@mui/icons-material';\r\nimport { StringIncrement } from '../../Modules/StringIncrementor';\r\n\r\nconst red = '#DC143C';\r\nconst green = '#3CB371';\r\n\r\nconst Styles = () => ({\r\n\ttable: {\r\n\t\toverflowX: 'scroll',\r\n\t\toverflowY: 'scroll',\r\n\t},\r\n\ttableRow: {\r\n\t\tmargin: '0px',\r\n\t\tboxSizing: 'border-box',\r\n\t},\r\n\ttableCell: {\r\n\t\tpadding: '0px',\r\n\t},\r\n\ttableHeader: {\r\n\t\tpadding: '0px',\r\n\t},\r\n\theaderRow: {\r\n\t\tborderBottom: '2px solid black',\r\n\t\tboxSizing: 'border-box',\r\n\t},\r\n\theaderCell: {\r\n\t\tpadding: '0px',\r\n\t\tminWidth: '16px',\r\n\r\n\t},\r\n\r\n\taddButton: {\r\n\t\tpadding: '0px',\r\n\t},\r\n\tvertexColumn: {\r\n\t\tborderRight: '2px solid black',\r\n\t\tboxSizing: 'border-box',\r\n\t\twidth: '16px',\r\n\t},\r\n\tmatrixCell: {\r\n\t\tborder: '0px',\r\n\t\t// height: '16px',\r\n\t\tmaxWidth: '16px',\r\n\t},\r\n});\r\n\r\nexport function Editor(props) {\r\n\tconst { vertexSet, setVertexSet } = props;\r\n\r\n\tconst styles = Styles();\r\n\r\n\tconst vertices = Object.keys(vertexSet);\r\n\r\n\tconst handleCellClick = (row, column) => {\r\n\t\tvertexSet[row][column] = vertexSet[row][column] ? 0 : 1;\r\n\t\tsetVertexSet({ ...vertexSet });\r\n\t};\r\n\r\n\tconst handleVertexAdd = () => {\r\n\t\tconst nextVertexName = StringIncrement(vertices[vertices.length - 1]);\r\n\r\n\t\tconst copy = { ...vertexSet };\r\n\t\tcopy[nextVertexName] = vertices.map(() => 0);\r\n\r\n\t\tfor (const vertex of Object.keys(copy)) {\r\n\t\t\tcopy[vertex].push(0);\r\n\t\t}\r\n\r\n\t\tsetVertexSet(copy);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<TableContainer component={Paper} style={styles.table}>\r\n\t\t\t<Table size=\"small\">\r\n\t\t\t\t<TableHead style={styles.tableHeader}>\r\n\t\t\t\t\t<TableRow style={{\r\n\t\t\t\t\t\t...styles.headerRow,\r\n\t\t\t\t\t\t...styles.tableRow,\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t...styles.vertexColumn,\r\n\t\t\t\t\t\t\t\t...styles.headerCell,\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Tooltip placement=\"right\" title=\"Click to Add Vertex\">\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\tdisabled={vertices.length >= 26}\r\n\t\t\t\t\t\t\t\t\tstyle={styles.addButton}\r\n\t\t\t\t\t\t\t\t\tonClick={handleVertexAdd}>\r\n\t\t\t\t\t\t\t\t\t<AddSharp />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvertices.map(vertex => (\r\n\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t...styles.headerCell,\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t{vertex}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</TableRow>\r\n\t\t\t\t</TableHead>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvertices.map(vertex => (\r\n\t\t\t\t\t\t\t<TableRow style={{\r\n\t\t\t\t\t\t\t\t...styles.tableRow,\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t...styles.tableCell,\r\n\t\t\t\t\t\t\t\t\t\t...styles.vertexColumn,\r\n\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t{vertex}\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tvertexSet[vertex].map((item, column) => (\r\n\t\t\t\t\t\t\t\t\t\t<TableCell\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleCellClick(vertex, column)}\r\n\t\t\t\t\t\t\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t...styles.tableCell,\r\n\t\t\t\t\t\t\t\t\t\t\t\t...styles.matrixCell,\r\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundColor: item ? green : red,\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: item ? 'black' : 'white',\r\n\t\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t</TableBody>\r\n\t\t\t</Table>\r\n\t\t</TableContainer>\r\n\t);\r\n}\r\n","export function StringIncrement(str) {\r\n\tconst lastIndex = str.length - 1;\r\n\r\n\tif (lastIndex < 0) {\r\n\t\treturn 'A';\r\n\t}\r\n\r\n\tif (str[lastIndex] === 'Z') {\r\n\t\tconst copy = str.split('');\r\n\r\n\t\tconst newChar = 'A';\r\n\r\n\t\tcopy[lastIndex] = newChar;\r\n\t\treturn `A${copy.join('')}`;\r\n\t}\r\n\r\n\tconst copy = str.split('');\r\n\r\n\tconst lastChar = str[lastIndex];\r\n\tconst newChar = String.fromCharCode(lastChar.charCodeAt(0) + 1);\r\n\r\n\tcopy[lastIndex] = newChar;\r\n\treturn copy.join('');\r\n}\r\n","import { Circle } from './Circle';\r\n\r\nexport const NodeTypes = {\r\n\tcircle: Circle,\r\n};\r\n","import React from 'react';\r\nimport { Handle } from 'react-flow-renderer';\r\n\r\nconst Styles = () => ({\r\n\tNodeStyles: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t\tpadding: 0,\r\n\t\tboxSizing: 'border-box',\r\n\r\n\t},\r\n\tHandle: {\r\n\t\topacity: '0%',\r\n\t},\r\n});\r\n\r\nexport function Circle(data) {\r\n\tconst config = data.data;\r\n\tconst { label, diameter, backgroundColor, color, selfLoop } = config;\r\n\r\n\tconst styles = Styles();\r\n\treturn (\r\n\t\t<div style={{\r\n\t\t\t...styles.NodeStyles,\r\n\t\t\theight: diameter || '60px',\r\n\t\t\twidth: diameter || '60px',\r\n\t\t\tborderRadius: diameter || '60px',\r\n\t\t\tbackgroundColor: backgroundColor || '#4169E1',\r\n\t\t\tcolor: color || '#FFF',\r\n\t\t\tborderStyle: selfLoop ? 'double' : 'none',\r\n\t\t\tborderColor: color || '#FFF',\r\n\t\t\tborderWidth: selfLoop ? '4px' : '0px',\r\n\t\t}}>\r\n\t\t\t<Handle\r\n\t\t\t\tid=\"a\"\r\n\t\t\t\tisConnectable={false}\r\n\t\t\t\ttype=\"source\"\r\n\t\t\t\tposition=\"top\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t...styles.Handle,\r\n\t\t\t\t\ttop: '2%',\r\n\t\t\t\t\tleft: '25%',\r\n\t\t\t\t}} />\r\n\r\n\t\t\t<Handle\r\n\t\t\t\tid=\"b\"\r\n\t\t\t\tisConnectable={false}\r\n\t\t\t\ttype=\"target\"\r\n\t\t\t\tposition=\"top\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t...styles.Handle,\r\n\t\t\t\t\ttop: '2%',\r\n\t\t\t\t\tleft: '72%',\r\n\t\t\t\t}} />\r\n\t\t\t<Handle\r\n\t\t\t\tid=\"c\"\r\n\t\t\t\tisConnectable={false}\r\n\t\t\t\ttype=\"source\"\r\n\t\t\t\tposition=\"top\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t...styles.Handle,\r\n\t\t\t\t\ttop: '48%',\r\n\t\t\t\t}} />\r\n\t\t\t<div>{label}</div>\r\n\t\t\t<Handle\r\n\t\t\t\tid=\"d\"\r\n\t\t\t\tisConnectable={false}\r\n\t\t\t\ttype=\"target\"\r\n\t\t\t\tposition=\"bottom\"\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t...styles.Handle,\r\n\t\t\t\t\ttop: '48%',\r\n\t\t\t\t}} />\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\n\r\nimport ReactFlow, {\r\n\t// removeElements,\r\n\t// addEdge,\r\n\tMiniMap,\r\n\tControls,\r\n\tBackground,\r\n} from 'react-flow-renderer';\r\n\r\nimport { NodeTypes } from './NodeTypes';\r\n\r\nconst onLoad = reactFlowInstance => {\r\n\t// console.log('flow loaded:', reactFlowInstance);\r\n\treactFlowInstance.fitView();\r\n};\r\n\r\nexport function Graph(props) {\r\n\tconst { elements } = props;\r\n\tconst onElementsRemove = () => { };\r\n\tconst onConnect = () => { };\r\n\r\n\treturn (\r\n\t\t<ReactFlow\r\n\t\t\telements={elements}\r\n\t\t\tnodeTypes={NodeTypes}\r\n\t\t\tonElementsRemove={onElementsRemove}\r\n\t\t\tonConnect={onConnect}\r\n\t\t\tonLoad={onLoad}\r\n\t\t\tsnapToGrid\r\n\t\t\tsnapGrid={[15, 15]}>\r\n\t\t\t<MiniMap\r\n\t\t\t\tnodeStrokeColor={n => {\r\n\t\t\t\t\tif (n.style?.background) {\r\n\t\t\t\t\t\treturn n.style.background;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (n.type === 'input') {\r\n\t\t\t\t\t\treturn '#0041d0';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (n.type === 'output') {\r\n\t\t\t\t\t\treturn '#ff0072';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (n.type === 'default') {\r\n\t\t\t\t\t\treturn '#1a192b';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (n.type === 'circle') {\r\n\t\t\t\t\t\treturn n.data.color || 'black';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn '#eee';\r\n\t\t\t\t}}\r\n\t\t\t\tnodeColor={n => {\r\n\t\t\t\t\tif (n.style?.background) {\r\n\t\t\t\t\t\treturn n.style.background;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (n.type === 'circle') {\r\n\t\t\t\t\t\treturn n.data.color || '#4169E1';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn '#fff';\r\n\t\t\t\t}}\r\n\t\t\t\tnodeBorderRadius={2} />\r\n\t\t\t<Controls />\r\n\t\t\t<Background color=\"#aaa\" gap={16} />\r\n\t\t</ReactFlow>\r\n\t);\r\n}\r\n","export const customElements = [\r\n\t{\r\n\t\tid: '1',\r\n\t\ttype: 'circle',\r\n\t\tposition: { x: 100, y: 100 },\r\n\t\tdata: {\r\n\t\t\tlabel: 'Yee',\r\n\t\t\tdiameter: '100px',\r\n\t\t\tselfLoop: true,\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tid: '2',\r\n\t\ttype: 'circle',\r\n\t\tposition: { x: 500, y: 500 },\r\n\t\tdata: {\r\n\t\t\tlabel: 'Haw',\r\n\t\t\tdiameter: '100px',\r\n\t\t},\r\n\t},\r\n\t{\r\n\t\tid: 'e1-2',\r\n\t\tsource: '1',\r\n\t\ttarget: '2',\r\n\t\tsourceHandle: 'c',\r\n\t\ttargetHandle: 'd',\r\n\t\ttype: 'straight',\r\n\t\tanimated: true,\r\n\t},\r\n\t{\r\n\t\tid: 'e1-2',\r\n\t\tsource: '2',\r\n\t\ttarget: '1',\r\n\t\tsourceHandle: 'c',\r\n\t\ttargetHandle: 'd',\r\n\t\ttype: 'straight',\r\n\t\tanimated: true,\r\n\t},\r\n];\r\n\r\nexport function GenerateNodes(vertexSet) {\r\n\tconst vertices = Object.keys(vertexSet);\r\n\r\n\tconst nodes = [];\r\n\tconst edges = [];\r\n\r\n\tvertices.forEach((vertexName, rowNumber) => {\r\n\t\tconst node = {\r\n\t\t\tid: vertexName,\r\n\t\t\ttype: 'circle',\r\n\t\t\tposition: { x: 500, y: 100 * rowNumber },\r\n\t\t\tdata: {\r\n\t\t\t\tlabel: vertexName,\r\n\t\t\t\tselfLoop: false,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tnodes.push(node);\r\n\r\n\t\tvertexSet[vertexName].forEach((matrixElement, columnNumber) => {\r\n\t\t\tif (columnNumber === rowNumber && matrixElement === 1) {\r\n\t\t\t\tnode.data.selfLoop = columnNumber === rowNumber;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (matrixElement !== 1) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst adjacentVertexName = vertices[columnNumber];\r\n\r\n\t\t\tconst edge = {\r\n\t\t\t\tid: `e${vertexName}-${adjacentVertexName}`,\r\n\t\t\t\tsource: `${vertexName}`,\r\n\t\t\t\ttarget: `${adjacentVertexName}`,\r\n\t\t\t\tsourceHandle: 'c',\r\n\t\t\t\ttargetHandle: 'd',\r\n\t\t\t\ttype: 'straight',\r\n\t\t\t\tanimated: true,\r\n\t\t\t};\r\n\r\n\t\t\tedges.push(edge);\r\n\t\t});\r\n\t});\r\n\r\n\treturn [\r\n\t\t...nodes,\r\n\t\t...edges,\r\n\t];\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Editor } from './Components/Editor/Editor';\r\nimport { Graph } from './Components/Graph/Graph';\r\nimport { GenerateNodes } from './Modules/GenerateNodes';\r\n\r\ndocument.getElementById('body').style.margin = '0px';\r\n\r\nconst Styles = () => ({\r\n\tApp: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'row',\r\n\t\twidth: '100vw',\r\n\t\theight: '100vh',\r\n\t},\r\n\tSidePanel: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\twidth: '25%',\r\n\t\theight: '100%',\r\n\t\tbackgroundColor: '#4169E1',\r\n\t},\r\n\tEditor: {\r\n\t\twidth: '100%',\r\n\t\theight: '60%',\r\n\t\tbackgroundColor: '#4169E1',\r\n\t\tboxSizing: 'border-box',\r\n\t\tborder: '2px solid white',\r\n\r\n\t},\r\n\tLegend: {\r\n\t\twidth: '100%',\r\n\t\theight: '40%',\r\n\t\tbackgroundColor: 'black',\r\n\t\tboxSizing: 'border-box',\r\n\t\tborder: '2px solid white',\r\n\t},\r\n\tGraphContainer: {\r\n\t\twidth: '75%',\r\n\t\theight: '100%',\r\n\t\tbackgroundColor: '#222',\r\n\t},\r\n});\r\n\r\nexport function App() {\r\n\tconst styles = Styles();\r\n\r\n\tconst [vertexSet, setVertexSet] = useState({\r\n\t\tA: [1, 0, 0, 0],\r\n\t\tB: [0, 1, 0, 0],\r\n\t\tC: [0, 0, 1, 0],\r\n\t\tD: [0, 0, 0, 1],\r\n\t});\r\n\r\n\tconst [elements, setElements] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetElements(GenerateNodes(vertexSet));\r\n\t}, []);\r\n\r\n\tconst updateVertexSet = newValue => {\r\n\t\tsetVertexSet(newValue);\r\n\t\tsetElements(GenerateNodes(newValue));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"App\" style={styles.App}>\r\n\t\t\t<div className=\"App\" style={styles.SidePanel}>\r\n\t\t\t\t<div style={styles.Editor}>\r\n\t\t\t\t\t<Editor\r\n\t\t\t\t\t\tvertexSet={vertexSet}\r\n\t\t\t\t\t\tsetVertexSet={updateVertexSet} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={styles.Legend} />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"App\" style={styles.GraphContainer}>\r\n\t\t\t\t<Graph elements={elements} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}